{device_option}
{chemical_state} 
backwards_euler({chemical_state} y,  
                {scalar_parameter} dt, 
                {scalar} tol = 1e-10, 
                {index} max_iter = 10) 
{{
        
        
        {species} y_init = get_species(y);
        {scalar} temperature_guess = temperature(y[0], y_init);
        {species} y_guess = get_species(y);
        for ({index} iter = 0; iter < 5; ++iter) 
        {{
            {scalar} temperature_ = temperature(y[0], y_guess);
            {species} f = source(y_guess, temperature_);
            {jacobian} J = source_jacobian(y_guess, temperature_);
            {jacobian} A = jacobian_I();
            {species} res = {{}};
            
            //LHS
            for ({index} i = 0; i < n_species; ++i) A[i][i] = A[i][i]/dt; 
            A = A - J;

            //RHS
            res = scale_gen(-{scalar_cast}(1)/dt, y_guess - y_init) + f;
            //Solve
            #ifdef CHEMGEN_DIRECT_SOLVER
            {species} dy = invert_jacobian(A) * res;
            #else
            {species} dy = gmres_solve(A, res, tol = 1e-10);
            #endif

            //Increment
            y_guess = y_guess + dy;

            if (norm2(dy) < 1e-10)
            {{
                std::cout << iter <<std::endl;
                return set_chemical_state(y[0], y_guess); 
            }};
        }}
        return set_chemical_state(y[0], y_guess); //sets energy to zero to signal integration broke
}}
