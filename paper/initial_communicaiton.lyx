#LyX 2.4 created this file. For more info see https://www.lyx.org/
\lyxformat 620
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass elsarticle
\begin_preamble
% specify here the journal
\journal{Computer Physics Communications}

% use this if you need line numbers
\usepackage{algpseudocode,algorithm,algorithmicx}
\usepackage{tikz}
\usetikzlibrary{shapes,arrows,calc,decorations.pathreplacing}
\end_preamble
\options 3p
\use_default_options false
\begin_modules
theorems-std
\end_modules
\maintain_unincluded_children no
\language english
\language_package default
\inputencoding utf8
\fontencoding auto
\font_roman "default" "default"
\font_sans "default" "default"
\font_typewriter "default" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_roman_osf false
\font_sans_osf false
\font_typewriter_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\use_microtype false
\use_dash_ligatures true
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\float_placement class
\float_alignment class
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry false
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine natbib
\cite_engine_type authoryear
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification false
\use_refstyle 1
\use_formatted_ref 0
\use_minted 0
\use_lineno 0
\index Index
\shortcut idx
\color #008000
\end_index
\leftmargin 2cm
\topmargin 2cm
\rightmargin 2cm
\bottommargin 2cm
\headheight 2cm
\headsep 2cm
\footskip 2cm
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\is_math_indent 0
\math_numbering_side default
\quotes_style english
\dynamic_quotes 0
\papercolumns 1
\papersides 2
\paperpagestyle default
\tablestyle default
\tracking_changes false
\output_changes false
\change_bars false
\postpone_fragile_content false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\docbook_table_output 0
\docbook_mathml_prefix 1
\end_header

\begin_body

\begin_layout Title
ChemGen:
 Malleable Chemistry Code Generation with Applications to High Performance Computational Fluid Dynamics
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
author{Ryan F.
 Johnson,
 Eric J.
 Ching,
 and Andrew D.
 Kercher}
\end_layout

\begin_layout Plain Layout


\backslash
address{Laboratories for Computational Physics and Fluid Dynamics,
  U.S.
 Naval Research Laboratory,
 4555 Overlook Ave SW,
 Washington,
 DC 20375}
\end_layout

\begin_layout Plain Layout


\backslash
author{Hai Wang}
\end_layout

\begin_layout Plain Layout


\backslash
address{Stanford University}
\end_layout

\end_inset


\end_layout

\begin_layout Keywords
lalal
\end_layout

\begin_layout Abstract
lalalal
\end_layout

\begin_layout Standard
\begin_inset FormulaMacro
\newcommand{\middlebar}{\,\middle|\,}
{\mathrm{|}}
\end_inset


\begin_inset FormulaMacro
\newcommand{\average}[1]{\left\{  \!\!\left\{  #1\right\}  \!\!\right\}  }
{\left\{ \left\{ #1\right\} \right\} }
\end_inset


\begin_inset FormulaMacro
\newcommand{\expnumber}[2]{{#1}\mathrm{e}{#2}}
{{#1}\mathrm{e}{#2}}
\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout

 
\backslash
newcommand*{
\backslash
horzbar}{
\backslash
rule[.5ex]{2.5ex}{0.5pt}}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
First macro is color,
 second is no color:
\end_layout

\end_inset


\begin_inset FormulaMacro
\newcommand{\revisionmathone}[1]{\textcolor{red}{#1}}
{\textcolor{red}{#1}}
\end_inset


\begin_inset Note Note
status open

\begin_layout Plain Layout
\begin_inset FormulaMacro
\newcommand{\revisionmath}[1]{#1}
{#1}
\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset FormulaMacro
\newcommand{\revisionmathtwo}[1]{\textcolor{blue}{#1}}
{\textcolor{red}{#1}}
\end_inset


\end_layout

\begin_layout Standard
\begin_inset FormulaMacro
\newcommand{\revisionmaththree}[1]{\textcolor{teal}{#1}}
{\textcolor{red}{#1}}
\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
makeatletter 
\backslash
def
\backslash
ps@pprintTitle{  
\backslash
let
\backslash
@oddhead
\backslash
@empty  
\backslash
let
\backslash
@evenhead
\backslash
@empty  
\backslash
def
\backslash
@oddfoot{
\backslash
centerline{
\backslash
thepage}}  
\backslash
let
\backslash
@evenfoot
\backslash
@oddfoot} 
\backslash
makeatother
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
let
\backslash
svthefootnote
\backslash
thefootnote
\backslash
let
\backslash
thefootnote
\backslash
relax
\backslash
footnotetext{
\backslash

\backslash
 
\backslash
hspace*{65pt}DISTRIBUTION STATEMENT A.
 Approved for public release.
 Distribution is unlimited.}
\backslash
addtocounter{footnote}{-1}
\backslash
let
\backslash
thefootnote
\backslash
svthefootnote
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Note Comment
status collapsed

\begin_layout Plain Layout
\begin_inset Tabular
<lyxtabular version="3" rows="27" columns="4">
<features tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="left" valignment="top">
<column alignment="left" valignment="top">
<column alignment="left" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
Symbol
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
Definition
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
Units
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $c_{p}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Specific heat at constant pressure
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $J/kg$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $c_{v}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Specific heat at constant volume
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $J/kg$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $C_{i}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Concentration of species 
\begin_inset Formula $i$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $kmol/m^{3}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\boldsymbol{C}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Concentration vector of all species
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $kmol/m^{3}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\bar{D}_{i}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Mass averaged diffusion Coefficient
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $m^{2}/s$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $D_{ij}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Diffusion coefficient of species 
\begin_inset Formula $i$
\end_inset

 to species 
\begin_inset Formula $j$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $m^{2}/s$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\mathrm{DG}(p=a)$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Discontinuous Galerkin solution where 
\begin_inset Formula $a$
\end_inset

 is the polynomial degree
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $e_{t}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Total energy
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $J/kg$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\gamma$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Ratio of specific heats
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $c_{p}/c_{v}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $h_{t}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Total enthalpy,
 species specific has subscript 
\begin_inset Formula $i$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $J/kg$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $h$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
grid spacing
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $m$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\lambda$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Conductivity,
 species specific has subscript 
\begin_inset Formula $i$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $J/\left(m\cdot s\cdot K\right)$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\mu$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Viscosity,
 species specific has subscript 
\begin_inset Formula $i$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $m^{2}/s$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $n_{s}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Number of species
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $p$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Pressure
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $kg\cdot m/s^{2}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $R^{o}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Universal gas constant,
 
\begin_inset Formula $8314.4621$
\end_inset

,
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\xout off
\uuline off
\uwave off
\noun off
\color none
\begin_inset Formula $J/\left(kmol\cdot K\right)$
\end_inset


\family default
\series default
\shape default
\size default
\emph default
\bar default
\strikeout default
\xout default
\uuline default
\uwave default
\noun default
\color inherit

\begin_inset Formula $\frac{}{}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\rho$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Density,
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $kg/m^{3}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $t$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
time
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $s$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $T$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Temperature of gas,
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $K$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\boldsymbol{\tau}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Dyadic Stress tensor,
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $kg\cdot m/s^{2}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $u$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Internal energy,
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $J/kg$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\boldsymbol{v}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Velocity,
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $m/s$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\boldsymbol{V}_{i}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Species diffusion velocity
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $m/s$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $W_{i}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Molecular weight of species 
\begin_inset Formula $i$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $kg/kmol$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $X_{i}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Mole fraction of species 
\begin_inset Formula $i$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $Y_{i}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Mass fraction of species 
\begin_inset Formula $i$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Section
Introduction
\begin_inset CommandInset label
LatexCommand label
name "sec:Introduction"

\end_inset


\end_layout

\begin_layout Standard
Computational fluid dynamics (CFD) is a widely recognized scientific and engineering tool for understanding or predicting fluid behavior in situations where experimental data is limited or unavailable,
 and analytical solutions do not exist.
 The core function of CFD is to solve for conserved quantities,
 such as mass,
 momentum,
 and energy that satisfy conservation equations in space and time across a defined domain.
 This requires discretizing the conservation equations,
 such as the Navier-Stokes equations,
 using methods such as the finite volume,
 finite difference,
 or finite element approaches.
 CFD relies on large volumes of data to describe the fluid,
 stored at specific points within the domain,
 known as degrees of freedom (DoF).
 At each degree of freedom,
 the conserved variables are calculated based on the evolution of the conservation variables dictated by the modeled conservation equations.
\end_layout

\begin_layout Standard
Developing robust CFD software is an accomplishment in itself,
 given the multitude of challenging computational and numerical issues.
 The computational issues include efficient DoF communication in parallel,
 adaptive physical modeling,
 parallel computation,
 and managing complex geometries.
 Additionally,
 there are significant numerical challenges,
 such as stability-preserving methods,
 flux representation strategies,
 temporal integration techniques,
 and the development of robust boundary conditions.
 There is not one CFD software that seamlessly addresses all these diverse issues,
 giving rise to continued research into a variety of computational and numerical approaches to accelerate CFD while simultaneously modeling a fluid robustly.
 This gives rise to a family of CFD codes,
 ranging from experimental in-house codes for demonstrating new technologies,
 to established off-the-shelf softwares used for production level engineering simulations.
\end_layout

\begin_layout Standard
CFD focuses on the conservation variables related to mass,
 momentum,
 and energy of the fluid.
 For example,
 a three-dimensional compressible fluid simulation involves five primary continuum variables:
 energy,
 mass,
 and a three-component momentum vector.
 This gives 
\begin_inset Formula $n_{y}=n_{c}=5$
\end_inset

,
 where 
\begin_inset Formula $n_{c}$
\end_inset

 is the number of conserved non-reacting variables,
 and 
\begin_inset Formula $n_{y}$
\end_inset

 is the total state size.
 In many cases,
 existing non-reacting CFD software built around these five variables can be adapted for chemically reacting flows by expanding the state to include chemical species.
 This adaptation involves extending the state size to encompass the chemical species necessary to model reactions,
 calculating their fluxes along with the original variables,
 and incorporating 
\begin_inset Formula $n_{r}$
\end_inset

 chemical reactions.
 This increases the state size to 
\begin_inset Formula $n_{y}=n_{s}+n_{c}$
\end_inset

 ,
 where 
\begin_inset Formula $n_{s}$
\end_inset

 represents the number of chemical species.
 Detailed chemical mechanisms may involve hundreds of species and thousands of reactions,
 typically with 
\begin_inset Formula $n_{r}\approx5n_{s}$
\end_inset

.
 The number of species increases with the complexity of the fuel,
 for instance the ___ model for hydrogen is 10 chemical species with ## reactions and the __ model for JP-10 is ## species with ## reactions.
\end_layout

\begin_layout Standard
In order to adapt the most fundamental chemically reacting flow into an existing single component CFD software three main features must be added:
\end_layout

\begin_layout Enumerate

\series bold
The thermodynamics must be updated to thermally perfect equation of state.

\series default
 Most single-component formulations assume frozen gas thermodynamics,
 where pressure is directly related to internal energy.
 However,
 this assumption does not hold for multicomponent systems,
 requiring careful adjustments to ensure consistent computations between energy and temperature and pressure dependent relationships.
\begin_inset CommandInset label
LatexCommand label
name "enu:thermo"

\end_inset


\end_layout

\begin_layout Enumerate

\series bold
The ability to compute a source term.
 
\series default
The simplest CFD Navier-Stokes models typically do not include a source term,
 as it is not inherently part of the formulation.
 In these models,
 momentum,
 energy,
 and mass have no sources or sinks to add or remove them from the domain;
 instead,
 the conserved variables are transported and diffused.
\begin_inset CommandInset label
LatexCommand label
name "enu:source"

\end_inset


\end_layout

\begin_layout Enumerate

\series bold
Multicomponent transport models.
 
\series default
Mixture based transport quantities,
 such as viscosity and conductivity,
 would need to be adapted to multicomponent mixture models.
 In addition,
 the diffusion of each species needs to be considered with a transport method as well.
\end_layout

\begin_layout Standard
There are several approaches to integrate these features,
 with the most common being:
\end_layout

\begin_layout Enumerate
Locate and adapt existing Fortran code from early versions of Chemkin (cite) or Senkin (cite) for the target CFD.
\begin_inset CommandInset label
LatexCommand label
name "enu:chemkin"

\end_inset


\end_layout

\begin_layout Enumerate
Use the more widely adopted,
 open-source,
 and actively maintained Cantera (cite),
 which can serve as a third-party library in C++ and Fortran source codes,
 as well as in interpretive languages like Python and MATLAB.
\begin_inset CommandInset label
LatexCommand label
name "enu:cantera"

\end_inset


\end_layout

\begin_layout Enumerate
Manually code new physical models,
 such as source term reactions,
 thermodynamic fits,
 and transport properties.
\begin_inset CommandInset label
LatexCommand label
name "enu:manual"

\end_inset


\end_layout

\begin_layout Enumerate
Use code generation tools to read the chemical mechanism and produce adaptable source code in the desired format for the CFD software.
\begin_inset CommandInset label
LatexCommand label
name "enu:software"

\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset ref
LatexCommand ref
reference "enu:chemkin"
plural "false"
caps "false"
noprefix "false"
nolink "false"

\end_inset

 and 
\begin_inset CommandInset ref
LatexCommand ref
reference "enu:cantera"
plural "false"
caps "false"
noprefix "false"
nolink "false"

\end_inset

 are reasonable choices for demonstration cases,
 but they present certain challenges.
 With 
\begin_inset CommandInset ref
LatexCommand ref
reference "enu:chemkin"
plural "false"
caps "false"
noprefix "false"
nolink "false"

\end_inset

,
 the existing Chemkin and Senkin routines may not easily adapt to the specific requirements of the targeted CFD software,
 which can limit scalability and complicate code maintenance.
 For 
\begin_inset CommandInset ref
LatexCommand ref
reference "enu:cantera"
plural "false"
caps "false"
noprefix "false"
nolink "false"

\end_inset

,
 although the package is excellent for property calculations and other critical combustion scenarios,
 it is a third-party library,
 limiting control over functions.
 Data would need to be transferred back and forth between the CFD's degrees of freedom (DoF) and Cantera,
 potentially restricting access to essential computational acceleration techniques.
 Additionally,
 relying on a third-party library like Cantera may hinder compatibility with targeted architectures that Cantera developers cannot directly access.
 Using 
\begin_inset CommandInset ref
LatexCommand ref
reference "enu:manual"
plural "false"
caps "false"
noprefix "false"
nolink "false"

\end_inset

 can also be challenging;
 it often requires extensive,
 solitary work by developers,
 as the necessary models would need to be built from scratch (further described in Section 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:governing_equations"
plural "false"
caps "false"
noprefix "false"
nolink "false"

\end_inset

).
 The focus of this work is 
\begin_inset CommandInset ref
LatexCommand ref
reference "enu:software"
plural "false"
caps "false"
noprefix "false"
nolink "false"

\end_inset

,
 a tool that can generate source code compatible with the existing ecosystem of the target CFD software
\end_layout

\begin_layout Standard
\align block
Code generation is a well-established concept,
 with a history in chemistry applications.
 There are two publicly available code generators focused on gas-phase combustion:
 PyJac (https://github.com/SLACKHA/pyJac) and Pyrometheus (https://github.com/ecisneros8/PyPrometheus).
 PyJac specializes in generating analytical source term Jacobians for non-fluid-based states,
 which can be used to speed up the computation of chemical species evolution.
 However,
 PyJac's last public commit was six years ago.
 Pyrometheus generates either C++ header files or Python files for gas-phase combustion calculations,
 incorporating several on-the-fly optimizations to enhance scalability for high-performance computing in CFD.
 Although Pyrometheus's last public commit was four years ago,
 we are in contact with the developers,
 who are actively working on a private GitHub project to continue Pyrometheus's development.
 Mutation++?
\end_layout

\begin_layout Standard
In this work,
 we introduce the first iteration of ChemGen,
 a software package that leverages code generation to integrate multispecies thermodynamics and chemical kinetics into C++ based CFD codes.
 ChemGen utilizes decorators,
 discussed in detail in Section 3,
 to enable flexible C++ code generation tailored to existing software ecosystems.
 It also offers versatility in reaction rate calculations,
 allowing them to be evaluated in pure serial or adapted for parallel execution by modifying a few key functions.
 ChemGen currently focuses on thermodynamic properties and source term generation.
 Future versions will aim to incorporate detailed transport calculations,
 provide fully chemically reacting flow states,
 offer rapid analytical Jacobians for fluid dynamic states,
 and deliver scalable solvers for chemical state evolution.
\end_layout

\begin_layout Standard
This paper is organized as follows.
 First,
 we provide an in-depth background on high-performance computing in CFD,
 focusing on how various computational architectures can accelerate CFD and how chemistry can be cohesively implemented.
 Next,
 we offer an overview of ChemGen’s current capabilities and its application within CFD software.
 We then discuss the formulation in the context of compressible,
 chemically reacting flows,
 covering the thermodynamic relationships for multi-species fluids,
 accepted reaction rate formulations,
 and the creation of source terms.
 Following this,
 we introduce several publicly available C++ codes and the concept of decorators as implemented in ChemGen.
\end_layout

\begin_layout Standard
We demonstrate ChemGen’s standalone code generation with examples showcasing its adaptability for distributed computing using MPI,
 Thread Building Blocks (TBB),
 and GPU-based threading,
 with a discussion on its integration potential with existing CFD models.
 Finally,
 we illustrate the integration of a ChemGen-generated source term within the open-source CFD code NEKRS
\end_layout

\begin_layout Subsection
Background
\end_layout

\begin_layout Subsubsection
High Performance Computing in CFD
\end_layout

\begin_layout Subsubsection
Diversity found in C++ Software
\end_layout

\begin_layout Subsection
ChemGen Prospectus
\end_layout

\begin_layout Standard
ODE:
\end_layout

\begin_layout Standard
As The CFD algorithm can be simplified by solving the chemical mass action separately from the fluid transport.
 This approximation allows the chemical kinetics problem at each grid cell or vertex to be integrated independently over the specified time step size δt.
 At each element,
 the Ns mass fractions and enthalpy (or temperature) are solved as a system of Ns+1 stiff ordinary differential equations (ODEs).
 Even with the preceding simplification,
 the cost of solving the ODEs can be prohibitive.
 New algorithmic and computer science techniques such as massive parallel computing can significantly reduce the computational cost and are therefore of great interest to combustion simulation developers throughout the propulsion and power community.
 An alternative approach exploits the available 
\end_layout

\begin_layout Section
Governing equations and Chemical Kinetics 
\begin_inset CommandInset label
LatexCommand label
name "sec:governing_equations"

\end_inset


\end_layout

\begin_layout Standard
ChemGen is suitable for low-Mach flows that decouple pressure from the energy equation;
 however,
 in this work,
 we focus on a compressible CFD formulation without viscous terms.
 Here,
 we primarily highlight the interaction between the fluid dynamic state,
 
\begin_inset Formula $y_{f}$
\end_inset

,
 and the chemical state,
 
\begin_inset Formula $y_{c}$
\end_inset

.
 By using the source term and thermodynamics described in the following sections,
 code generated by ChemGen can effectively transition a single-component,
 calorically perfect Euler formulation to a chemically reacting Euler formulation.
 In Section ###,
 we discuss how a chemically reacting Euler formulation can be adapted to a simplified reacting Navier-Stokes formulation by making assumptions about the mixture's transport properties.
 Future versions of ChemGen will support diffusive and convective flux models,
 but here we demonstrate ChemGen's role in generating source terms for integration with existing CFD codes.
 
\end_layout

\begin_layout Standard
The multicomponent chemically reacting Euler equations are given as
\begin_inset Formula 
\begin{equation}
\frac{\partial y_{f}}{\partial t}+\nabla\cdot\mathcal{F}\left(y_{f}\right)-\mathcal{S}\left(y_{f}\right)=0\label{eq:conservation-law-strong-form}
\end{equation}

\end_inset

where 
\begin_inset Formula $t\in\mathbb{R}^{+}$
\end_inset

 is time,
 
\begin_inset Formula $y_{f}(x,t):\mathbb{R}^{d}\times\mathbb{R}^{+}\rightarrow\mathbb{R}^{m}$
\end_inset

 is the conservative state vector (with 
\begin_inset Formula $x=(x_{1},\ldots,x_{d})$
\end_inset

 denoting the physical coordinates),
 
\begin_inset Formula $\mathcal{F}(y_{f}):\mathbb{R}^{m}\rightarrow\mathbb{R}^{m\times d}$
\end_inset

 is the convective flux,
 
\begin_inset Formula $\mathcal{S}(y_{f}):\mathbb{R}^{m}\rightarrow\mathbb{R}^{m}$
\end_inset

 is the chemical source term.
 The fluid dynamic state is
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
y_{f}=\left(\rho v_{1},\ldots,\rho v_{d},\rho e_{t},C_{1},\ldots,C_{n_{s}}\right)^{T},\label{eq:reacting-navier-stokes-state}
\end{equation}

\end_inset

where 
\begin_inset Formula $n_{s}$
\end_inset

 is the number of species (which yields 
\begin_inset Formula $m=d+n_{s}+1$
\end_inset

),
 
\begin_inset Formula $\rho$
\end_inset

 is density,
 
\begin_inset Formula $v=\left(v_{1},\ldots,v_{d}\right)$
\end_inset

 is the velocity,
 
\begin_inset Formula $e_{t}$
\end_inset

 is the mass-specific total energy,
 and 
\begin_inset Formula $C=\left(C_{1},\ldots,C_{n_{s}}\right)$
\end_inset

 are the species concentrations.
 The density is computed from the species concentrations as
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
\rho=\sum_{i=1}^{n_{s}}\rho_{i}=\sum_{i=1}^{n_{s}}W_{i}C_{i},
\]

\end_inset


\end_layout

\begin_layout Standard
\noindent
where 
\begin_inset Formula $\rho_{i}$
\end_inset

 is the partial density and 
\begin_inset Formula $W_{i}$
\end_inset

 is the molecular mass of the 
\begin_inset Formula $i$
\end_inset

th species.
 The mass fraction of the 
\begin_inset Formula $i$
\end_inset

th species is defined as 
\begin_inset Formula 
\[
Y_{i}=\frac{\rho_{i}}{\rho}.
\]

\end_inset


\end_layout

\begin_layout Standard
\noindent
The 
\begin_inset Formula $k$
\end_inset

th spatial convective flux component is written as
\begin_inset Formula 
\begin{equation}
\mathcal{F}_{k}\left(y\right)=\left(\rho v_{k}v_{1}+p\delta_{k1},\ldots,\rho v_{k}v_{d}+p\delta_{kd},v_{k}\left(\rho e_{t}+p\right),v_{k}C_{1},\ldots,v_{k}C_{n_{s}}\right)^{T},\label{eq:reacting-navier-stokes-spatial-convective-flux-component}
\end{equation}

\end_inset

where 
\begin_inset Formula $p$
\end_inset

 is the pressure.
 The mass-specific total energy is the sum of the specific internal and kinetic energies,
 given by
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
e_{t}=u+\frac{1}{2}\sum_{k=1}^{d}v_{k}v_{k},
\]

\end_inset

where the (mixture-averaged) mass-specific internal energy,
 
\begin_inset Formula $u$
\end_inset

,
 is the mass-weighted sum of the mass-specific internal energies of each species:
\begin_inset Formula 
\[
u=\sum_{i=1}^{n_{s}}Y_{i}u_{i}.
\]

\end_inset


\end_layout

\begin_layout Standard
The chemical state is
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
y_{c}=\left(p,T,\ln T,M_{c},C_{1},\ldots,C_{n_{s}},\right)^{T},\label{eq:reacting-navier-stokes-state-1}
\end{equation}

\end_inset

which is the complete state needed to calculate 
\begin_inset Formula $\mathcal{S}\left(y\right)$
\end_inset

.
 The species concentrations,
 
\begin_inset Formula $C_{i}$
\end_inset

,
 are all conserved quantities and can be extracted readily extracted from the fluid dynamic state.
 In the next section we expand on how to calculate temperature from internal energy using a nonlinear solve,
 
\begin_inset Formula $\rho u\left(C_{i},T\right)\rightarrow T$
\end_inset

,
 which immediately gives the pressure from the fluid dynamic state
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
p=R^{o}T\sum_{i=1}^{n_{s}}C_{i},
\]

\end_inset

with 
\begin_inset Formula $R^{0}=8314.4621\,\mathrm{JKmol}^{-1}\mathrm{K}^{-1}$
\end_inset

 denoting the universal gas constant.
 It is common to utilize 
\begin_inset Formula $\ln T$
\end_inset

 in the chemical state as a precomputed value to avoid over computing logarithms and incorporate it into optimizations.
 Finally the mixture concentration,
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
M_{c}=\sum_{i=1}^{n_{s}}C_{i}=\frac{p}{R^{o}T},
\]

\end_inset

is utilized in various reactions,
 such as third body reactions with no specified efficiencies.
 ChemGen creates this chemical state in the source term function prior to any other evaluations so that their values are readily available.
\end_layout

\begin_layout Subsection
Thermodynamics
\end_layout

\begin_layout Standard
This work assumes thermally perfect gases,
 with 
\begin_inset Formula $u_{i}$
\end_inset

 given by
\begin_inset space ~
\end_inset


\begin_inset CommandInset citation
LatexCommand citep
key "Gio99"
literal "false"

\end_inset


\begin_inset Formula 
\begin{equation}
u_{i}=h_{i}-R_{i}T=h_{\mathrm{ref},i}+\int_{T_{\mathrm{ref}}}^{T}c_{p,i}(\tau)d\tau-R_{i}T,\label{eq:internal_energy_identity}
\end{equation}

\end_inset

where 
\begin_inset Formula $h_{i}$
\end_inset

 is the mass-specific enthalpy of the 
\begin_inset Formula $i$
\end_inset

th species,
 
\begin_inset Formula $R_{i}=R^{0}/W_{i}$
\end_inset

,
 
\begin_inset Formula $T$
\end_inset

 is the temperature,
 
\begin_inset Formula $T_{\mathrm{ref}}$
\end_inset

 is the reference temperature (298.15 K),
 
\begin_inset Formula $h_{\mathrm{ref},i}$
\end_inset

 is the reference-state species formation enthalpy,
 and 
\begin_inset Formula $c_{p,i}$
\end_inset

 is the mass-specific heat capacity at constant pressure of the 
\begin_inset Formula $i$
\end_inset

th species.
 
\begin_inset Formula $c_{p,i}$
\end_inset

 is computed from an 
\begin_inset Formula $n_{p}$
\end_inset

-order polynomial as
\begin_inset Formula 
\begin{equation}
c_{p,i}=\sum_{k=0}^{n_{p}}a_{ik}T^{k},\label{eq:specific_heat_polynomial}
\end{equation}

\end_inset

based on the NASA coefficients
\begin_inset space ~
\end_inset


\begin_inset CommandInset citation
LatexCommand citep
key "Mcb93,Mcb02"
literal "false"

\end_inset

.
 For efficiency purposes,
 ChemGen re-fits the polynomial for 
\begin_inset Formula $c_{p,i}$
\end_inset

 to arbitrary order.
 Thus,
 in order to establish consistent thermodynamics the identity for internal energy must be satisfied from Equation
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand eqref
reference "eq:internal_energy_identity"
plural "false"
caps "false"
noprefix "false"
nolink "false"

\end_inset

,
 thus the following relationships are used with pre-computed coefficients,
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
h_{i}=h_{\text{ref},i}+\sum_{k=0}^{n_{p}}\frac{a_{ik}}{k+1}T^{k+1}=\sum_{k=0}^{n_{p}+1}b_{ik}T^{k}\label{eq:entahlpy-polynomial}
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
u_{i}=h_{\text{ref},i}+\sum_{k=0}^{n_{p}}\frac{a_{ik}}{k+1}T^{k+1}-R_{i}T=\sum_{k=0}^{n_{p}+1}c_{ik}T^{k},\label{eq:internal-energy-polynomial}
\end{equation}

\end_inset

Here we target 
\begin_inset Formula $h_{i}(T=298\text{K})$
\end_inset

 as a standard enthalpy that can be obtained from the existing NASA coefficients or from utilizing any number of thermodynamics packages,
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
h_{\text{ref},i}=h_{i}(T=298\text{K})-\sum_{k=0}^{n_{p}}\frac{a_{ik}}{k+1}\left(298\right)^{k+1},\label{eq:enthalpy-adjustment}
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
b_{ik}=\begin{cases}
\frac{a_{i,k-1}}{k}, & k\geqq1\\
h_{\text{ref},i}, & k=0.
\end{cases}\label{eq:enthalpy_coeffs}
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
c_{ik}=\begin{cases}
\frac{a_{i,k-1}}{k}, & k>1\\
a_{i,0}-R & k=1\\
h_{\text{ref},i}, & k=0.
\end{cases}\label{eq:internal-energy-coeffs}
\end{equation}

\end_inset

This integration requires two monomial sequences for temperature,
 one to the power 
\begin_inset Formula $n_{p}$
\end_inset

,
 
\begin_inset Formula $\boldsymbol{T}_{n_{p}}=\left(1,T,T^{2},\dots,T^{n_{p}}\right)$
\end_inset

 and one to the power 
\begin_inset Formula $n_{p}+1$
\end_inset

,
 
\begin_inset Formula $\boldsymbol{T}_{n_{p}+1}=\left(1,T,T^{2},\dots,T^{n_{p}+1}\right)$
\end_inset

 which can then be simply contracted with the respective array of coefficients,
 for example 
\begin_inset Formula $u_{i}=\left<\boldsymbol{C}_{i},\boldsymbol{T}_{n_{p}+1}\right>$
\end_inset

 where 
\begin_inset Formula $\boldsymbol{C}_{i}=(c_{i,0},c_{i,1},c_{i,2},\dots,c_{i,n_{p}+1})$
\end_inset

.
\end_layout

\begin_layout Standard
The mass-specific thermodynamic entropy of the mixture is defined as
\begin_inset Formula 
\begin{equation}
s=\sum_{i=1}^{n_{s}}Y_{i}s_{i},\label{eq:entropy-mass-definition}
\end{equation}

\end_inset

with 
\begin_inset Formula $s_{i}$
\end_inset

 given by
\begin_inset Formula 
\begin{equation}
s_{i}=s_{i}^{o}-R_{i}\log\frac{P_{i}}{P_{\mathrm{ref}}},\quad s_{i}^{o}=s_{\mathrm{ref},i}^{o}+\int_{T_{\mathrm{ref}}}^{T}\frac{c_{p,i}(\tau)}{\tau}d\tau,\label{eq:species-entropy-definition}
\end{equation}

\end_inset

where 
\begin_inset Formula $s_{\mathrm{ref},i}^{o}$
\end_inset

 is the species formation entropy at the reference temperature and reference pressure (
\begin_inset Formula $P_{\mathrm{ref}}=1\text{ atm}$
\end_inset

),
 
\begin_inset Formula $s_{i}^{o}$
\end_inset

 denotes the species entropy at atmospheric pressure,
 and 
\begin_inset Formula $P_{i}=C_{i}R^{0}T$
\end_inset

 is the partial pressure.
 The 
\begin_inset Formula $R_{i}\log\frac{P_{i}}{P_{\mathrm{ref}}}$
\end_inset

 which accounts when the gas is not at atmospheric pressure conditions will be utilized in mixture averaged calculations covered later;
 the term depends on concentration as well as temperature and can be addressed downstream of these thermodynamic relations.
 Focusing then on using the Equation
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand eqref
reference "eq:specific_heat_polynomial"
plural "false"
caps "false"
noprefix "false"
nolink "false"

\end_inset

 a polynomial for 
\begin_inset Formula $s_{i}^{o}$
\end_inset

 entropy quantity is thus
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
s_{i}^{o}=s_{\mathrm{ref},i}^{o}+a_{o}\ln T+\sum_{k=1}^{n_{p}}\frac{a_{ik}}{k}T^{k}=a_{o}\ln T+\sum_{k=0}^{n_{p}}d_{ik}T^{k},\label{eq:entropy_polynomial}
\end{equation}

\end_inset

where
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
d_{ik}=\begin{cases}
\frac{a_{i,k}}{k}, & k\geq1\\
s_{\mathrm{ref},i}^{o} & k=0.
\end{cases}\label{eq:entropy-coeffs}
\end{equation}

\end_inset

Finally the Gibbs free energy per species is
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
g_{i}=h_{i}-Ts_{i}^{o}=\sum_{k=0}^{n_{p}+1}b_{ik}T^{k}-\left(a_{o}\ln T+\sum_{k=0}^{n_{p}}d_{ik}T^{k}\right)T=\sum_{k=0}^{n_{p}+1}b_{ik}T^{k}-\left(a_{o}T\ln T+\sum_{k=1}^{n_{p}+1}d_{i,k-1}T^{k}\right)\label{eq:gibbs-deriviation}
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
g_{i}=b_{i0}-a_{io}T\ln T+\sum_{k=1}^{n_{p}}\left(b_{ik}-d_{i,k-1}\right)T^{k}+b_{i,n_{p}}T^{n_{p}+1}\label{eq:gibbs-reformatted}
\end{equation}

\end_inset

Which can be represented like the entropy fit as
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
g_{i}=-a_{o}T\ln T+\sum_{k=0}^{n_{p}+1}f_{ik}T^{k}\label{eq:gibbs-polynomial}
\end{equation}

\end_inset

This gives two new temperature monomials additional elements,
 one to the power 
\begin_inset Formula $n_{p}$
\end_inset

 with a 
\begin_inset Formula $\ln T$
\end_inset

,
 
\begin_inset Formula $\boldsymbol{T}_{n_{p},\ln T}=\left(1,T,T^{2},\dots,T^{n_{p}},\ln T\right)$
\end_inset

 and one to the power 
\begin_inset Formula $n_{p}+1$
\end_inset

,
 
\begin_inset Formula $\boldsymbol{T}_{n_{p}+1,T\ln T}=\left(1,T,T^{2},\dots,T^{n_{p}+1},-T\ln T\right)$
\end_inset

 which can then be simply contracted with the respective array of coefficients,
 
\begin_inset Formula $s_{i}=\left<\boldsymbol{C}_{i},\boldsymbol{T}_{n_{p},\ln T}\right>$
\end_inset

 where 
\begin_inset Formula $\boldsymbol{C}_{i}=(d_{i,0},d_{i,1},d_{i,2},\dots,d_{i,n_{p}},a_{0})$
\end_inset

 and 
\begin_inset Formula $g_{i}=\left<\boldsymbol{C}_{i},\boldsymbol{T}_{n_{p}+1,T\ln T}\right>$
\end_inset

 where 
\begin_inset Formula $\boldsymbol{C}_{i}=(f_{i,0},f_{i,1},f_{i,2},\dots,f_{i,n_{p}+1},a_{0})$
\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Note Comment
status collapsed

\begin_layout Plain Layout
\begin_inset Formula $s_{i}$
\end_inset

 can also be expressed as
\begin_inset space ~
\end_inset


\begin_inset CommandInset citation
LatexCommand citep
key "Gio99,Gou20,Gou20_2"
literal "false"

\end_inset


\begin_inset Formula 
\[
s_{i}=s_{\mathrm{ref},i}^{o}+\int_{T_{\mathrm{ref}}}^{T}\frac{c_{v,i}(\tau)}{\tau}d\tau-R_{i}\log\frac{C_{i}}{C_{\mathrm{ref}}},
\]

\end_inset

where 
\begin_inset Formula $C_{\mathrm{ref}}=P_{\mathrm{ref}}/R^{0}T_{\mathrm{ref}}$
\end_inset

 is the reference concentration and 
\begin_inset Formula $c_{v,i}=c_{p,i}-R_{i}$
\end_inset

 is the mass-specific heat capacity at constant volume of the 
\begin_inset Formula $i$
\end_inset

th species.
 Summing up the partial pressures yields the equation of state for the mixture:
 
\begin_inset Formula 
\begin{equation}
P=R^{0}T\sum_{i=1}^{n_{s}}C_{i}.\label{eq:EOS}
\end{equation}

\end_inset


\begin_inset Formula $u_{i}$
\end_inset

,
 
\begin_inset Formula $h_{i}$
\end_inset

,
 and 
\begin_inset Formula $s_{i}^{o}$
\end_inset

 are computed by integrating Equation
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand eqref
reference "eq:specific_heat_polynomial"
plural "false"
caps "false"
noprefix "false"
nolink "false"

\end_inset

.
 
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="6" columns="3">
<features tabularvalignment="middle">
<column alignment="center" valignment="top" width="1.35in">
<column alignment="center" valignment="top" width="1.95in">
<column alignment="center" valignment="top" width="2.6in">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Thermodynamic Quantity
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Fit
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Coefficient Description
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Species specific heat at 
\end_layout

\begin_layout Plain Layout
constant pressure,
 
\begin_inset Formula $c_{p,i}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $c_{p,i}=\sum_{k=0}^{n_{p}}a_{ik}T^{k}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Re-fit from existing data
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Species specific enthalpy,
 
\begin_inset Formula $h_{i}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $h_{i}=\sum_{k=0}^{n_{p}+1}b_{ik}T^{k}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $b_{ik}=\begin{cases}
\frac{a_{i,k-1}}{k}, & k\geqq1\\
h_{\text{ref},i}, & k=0
\end{cases}$
\end_inset

;
\end_layout

\begin_layout Plain Layout
\begin_inset Formula $h_{\text{ref},i}=h_{i}(T=298)-\sum_{k=0}^{n_{p}}\frac{a_{ik}}{k+1}\left(298\right)^{k+1}$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Species specific internal energy,
 
\begin_inset Formula $u_{i}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $u_{i}=\sum_{k=0}^{n_{p}+1}c_{ik}T^{k}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $c_{ik}=\begin{cases}
\frac{a_{i,k-1}}{k}, & k>1\\
a_{i,0}-R & k=1\\
h_{\text{ref},i}, & k=0.
\end{cases}$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Species specific entropy
\end_layout

\begin_layout Plain Layout
at reference pressure,
 
\begin_inset Formula $s_{i}^{o}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $s_{i}^{o}=a_{o}\ln T+\sum_{k=0}^{n_{p}+1}d_{ik}T^{k}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $d_{ik}=\begin{cases}
\frac{a_{i,k}}{k}, & k\geq1\\
s_{\mathrm{ref},i}^{o} & k=0.
\end{cases}$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Species specific Gibbs
\end_layout

\begin_layout Plain Layout
free energy,
 
\begin_inset Formula $g_{i}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $g_{i}=-a_{i0}T\ln T+\sum_{k=0}^{n_{p}+1}f_{ik}T^{k}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $f_{ik}=\begin{cases}
\left(\frac{1}{k}-\frac{1}{k-1}\right)a_{i,k-1} & n_{p}+1>k>1\\
a_{i,0}-s_{\mathrm{ref},i}^{o} & k=1\\
h_{\text{ref},i} & k=0.
\end{cases}$
\end_inset


\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
Full differentiability will be the focus of future ChemGen releases,
 however it is efficient to utilize the Newton method to extract temperature from internal energy which requires its derivative.
 Internal energy is typically part of a conserved state,
 for instance,
 the total energy formulation as outlined above would have the conserved variable of total energy as:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
\rho e_{t}=\rho u+\frac{1}{2}\sum_{k=1}^{d}\rho v_{k}v_{k}
\end{equation}

\end_inset

where the term 
\begin_inset Formula $\frac{1}{2}\sum_{k=1}^{d}\rho v_{k}v_{k}$
\end_inset

 can be computed from other conserved variables,
 momentum 
\begin_inset Formula $\rho v_{k}$
\end_inset

 and species 
\begin_inset Formula $v_{k}=\frac{\rho v_{k}}{\sum W_{i}C_{i}}$
\end_inset

.
 Thus one can directly compute the internal energy at any time:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
\rho u=\frac{1}{2}\sum_{k=1}^{d}\frac{\left(\rho v_{k}\right)\left(\rho v_{k}\right)}{\sum_{i}^{n_{s}}W_{i}C_{i}}-\rho e_{t}
\end{equation}

\end_inset

Newton's method are extremely accurate once converged and can be quite efficient when using exact derivatives,
 especially for scalar functions such as energy as a function of temperature,
 which does not require the inversion of a matrix.
 Included in ChemGen is a Newton iteration that is of the form
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
T_{n+1}=T_{n}-\frac{\rho u(T_{n})}{\frac{\partial\rho u(T_{n})}{\partial T}}.\label{eq:netwon_iteration_temperature}
\end{equation}

\end_inset

where 
\begin_inset Formula $T_{n}$
\end_inset

is the current guess (starting from 
\begin_inset Formula $T_{0}$
\end_inset

 an initial prescribed guess) and 
\begin_inset Formula $T_{n+1}$
\end_inset

 is the new guess.
 Here the terms in the fraction are
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
\rho u(T_{n})=\rho\sum_{i=1}^{n_{s}}Y_{i}u_{i}(T_{n})=\rho\sum_{i=1}^{n_{s}}\frac{W_{i}C_{i}}{\rho}u_{i}(T_{n})=\sum_{i=1}^{n_{s}}W_{i}C_{i}u_{i}(T_{n})=\sum_{i=1}^{n_{s}}W_{i}C_{i}\left<\boldsymbol{C}_{i},\boldsymbol{T}_{n_{p}+1}\right>
\end{equation}

\end_inset

 and
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
\frac{\partial\rho u(T_{n})}{\partial T}=\sum_{i=1}^{n_{s}}W_{i}C_{i}\frac{\partial u_{i}(T_{n})}{\partial T}=\sum_{i=1}^{n_{s}}W_{i}C_{i}\left<\boldsymbol{C}_{i},\frac{\partial\boldsymbol{T}_{n_{p}+1}}{\partial T}\right>
\end{equation}

\end_inset

with 
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
\boldsymbol{C}_{i}=(c_{i,0},c_{i,1},c_{i,2},\dots,c_{i,n_{p}+1})
\end{equation}

\end_inset

and
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
\frac{\partial\boldsymbol{T}_{n_{p}+1}}{\partial T}=\left(0,1,2T,\dots,\left(n_{p}+1\right)T^{n_{p}}\right)
\end{equation}

\end_inset

In the iteration for temperature an optimization can be made considering that the species,
 
\begin_inset Formula $C_{i}$
\end_inset

,
 are frozen.
 The coefficients can be pre-computed before the iterations to remove the need of extra contractions,
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
\boldsymbol{C}_{i}^{\dagger}=(W_{i}C_{i}c_{i,0},W_{i}C_{i}c_{i,1},W_{i}C_{i}c_{i,2},\dots,W_{i}C_{i}c_{i,n_{p}+1})
\end{equation}

\end_inset

which results in
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
T_{n+1}=T_{n}-\frac{\sum_{i=1}^{n_{s}}\left<\boldsymbol{C}_{i}^{\dagger},\boldsymbol{T}_{n_{p}+1}\right>}{\sum_{i=1}^{n_{s}}\left<\boldsymbol{C}_{i}^{\dagger},\frac{\partial\boldsymbol{T}_{n_{p}+1}}{\partial T}\right>}
\end{equation}

\end_inset

Starting with a guess value,
 
\begin_inset Formula $T_{0}$
\end_inset

,
 a target tolerance of 
\begin_inset Formula $\epsilon$
\end_inset

 can be used or a set number of iterations,
 
\begin_inset Formula $n_{T}$
\end_inset

,
 can be used to terminate the Newton iterations.
 It's important to note that a target tolerance could cause small divergences in threaded process,
 so keeping a set number of iterations would be ideal.
 ChemGen generates both target tolerance and set number of iterations.
 In general,
 we have found in our past work that 
\begin_inset Formula $n_{T}=3$
\end_inset

 is sufficient to be within 
\begin_inset Formula $1e-8$
\end_inset

 relative error for a variety of mechanisms at different temperatures.
\end_layout

\begin_layout Subsection
Chemical reaction rates and their ChemGen Representations
\begin_inset CommandInset label
LatexCommand label
name "subsec:chemical-reaction-rates"

\end_inset


\end_layout

\begin_layout Standard
The source term in Equation
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand eqref
reference "eq:conservation-law-strong-form"
plural "false"
caps "false"
noprefix "false"
nolink "false"

\end_inset

 is a smooth function of the state variables,
 written as
\begin_inset space ~
\end_inset


\begin_inset CommandInset citation
LatexCommand citep
key "Kee96"
literal "false"

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
\mathcal{S}\left(y\right)=\left(0,\ldots,0,0,\omega_{1},\ldots,\omega_{n_{s}}\right)^{T},\label{eq:reacting-navier-stokes-source-term}
\end{equation}

\end_inset

where 
\begin_inset Formula $\omega_{i}$
\end_inset

 is the production rate of the 
\begin_inset Formula $i$
\end_inset

th species,
 which satisfies mass conservation:
\begin_inset Formula 
\begin{equation}
\sum_{i=1}^{n_{s}}W_{i}\omega_{i}=0.\label{eq:chemical-reaction-mass-conservation}
\end{equation}

\end_inset

The production rate is computed as
\begin_inset Formula 
\[
\omega_{i}=\sum_{j=1}^{n_{r}}\nu_{ij}q_{j}.
\]

\end_inset


\begin_inset Formula $n_{r}$
\end_inset

 is the number of reactions,
 
\begin_inset Formula $\nu_{ij}=\nu_{ij}^{r}-\nu_{ij}^{f}$
\end_inset

 is the difference between the reverse (
\begin_inset Formula $\nu_{ij}^{r}$
\end_inset

) and the forward stoichiometric coefficients (
\begin_inset Formula $\nu_{ij}^{f}$
\end_inset

),
 and 
\begin_inset Formula $q_{j}$
\end_inset

 is the rate of progress of the 
\begin_inset Formula $j$
\end_inset

th reaction,
 computed as
\begin_inset Formula 
\begin{equation}
q_{j}=k_{j}^{f}\prod_{i=1}^{n_{s}}C_{i}^{\nu_{ij}^{f}}-k_{j}^{r}\prod_{i=1}^{n_{s}}C_{i}^{\nu_{ij}^{r}},\label{eq:chemical-reaction-rate-of-progress}
\end{equation}

\end_inset

where 
\begin_inset Formula $k_{j}^{f}$
\end_inset

 and 
\begin_inset Formula $k_{j}^{r}$
\end_inset

 are the forward and reverse rate constants,
 respectively,
 of the 
\begin_inset Formula $j$
\end_inset

th reaction.
 The forward and reverse rate constants are related via the equilibrium constant 
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
K_{j}^{e}=\frac{k_{j}^{f}}{k_{j}^{r}}\rightarrow k_{j}^{r}=\frac{k_{j}^{f}}{K_{j}^{e}}\label{eq:reverse_rate}
\end{equation}

\end_inset

where
\begin_inset Formula 
\begin{equation}
K_{j}^{e}=\exp\left(-\frac{\Delta G_{j}'}{R^{0}T}\right)\left(\frac{p_{\mathrm{ref}}}{R^{0}T}\right)^{\sum_{i}\nu_{ij}},\label{eq:equilibrium-constant-1}
\end{equation}

\end_inset

where 
\begin_inset Formula $\Delta G_{j}'$
\end_inset

 is the change in reference-state Gibbs free energy for the 
\begin_inset Formula $j$
\end_inset

th reaction,
 given as
\begin_inset Formula 
\[
\Delta G_{j}'=\sum_{i=1}^{n_{s}}\nu_{ij}g_{i}.
\]

\end_inset

where 
\begin_inset Formula $g_{i}=h_{i}-Ts_{i}$
\end_inset

 is the Gibbs function of the 
\begin_inset Formula $i$
\end_inset

th species.
 For this the term 
\begin_inset Formula 
\begin{align*}
\left(\frac{p_{ref}}{R^{0}T}\right)^{\sum_{i}\nu_{ij}}
\end{align*}

\end_inset

in
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand eqref
reference "eq:equilibrium-constant-1"
plural "false"
caps "false"
noprefix "false"
nolink "false"

\end_inset

 ChemGen inspects 
\begin_inset Formula $\sum_{i}\nu_{ij}$
\end_inset

 and finds the specific power,
 if it is an positive integer 
\begin_inset Formula $\left(\frac{P_{\mathrm{ref}}}{R^{0}T}\right)$
\end_inset

 is expressed as a series of multiplications,
 ie.
 
\begin_inset Formula $\sum_{i}\nu_{ij}=3$
\end_inset

 gives 
\begin_inset Formula $\left(\frac{p_{\mathrm{ref}}}{R^{0}T}\right)\cdot\left(\frac{p_{\mathrm{ref}}}{R^{0}T}\right)\cdot\left(\frac{p_{pref}}{R^{0}T}\right)$
\end_inset

 with 
\begin_inset Formula $1/R^{0}T$
\end_inset

 precomputed,
 if it is negative integer,
 
\begin_inset Formula $1/p_{ref}$
\end_inset

 is precomputed and a series of multiplication are carried in a similar manner.
 This removes the need to use the power function.
 Without code generation these types of expressions are bound to utilizing power functions or possibly if-statements that default to multiplication after inspecting the value of 
\begin_inset Formula $\sum_{i}\nu_{ij}$
\end_inset

.
\end_layout

\begin_layout Standard
There exist various models for approximating the forward rate functions,
 
\begin_inset Formula $k_{j}^{f}$
\end_inset

,
 in Equation
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand eqref
reference "eq:chemical-reaction-rate-of-progress"
plural "false"
caps "false"
noprefix "false"
nolink "false"

\end_inset

,
 all of the supported functions of which ChemGen supports will discussed next.
\end_layout

\begin_layout Subsubsection
Arrhenius reactions
\end_layout

\begin_layout Standard
The Arrhenius form is the most common model for approximating reaction rates.
 The forward rate constants are computed as
\begin_inset Formula 
\[
k_{j}^{f}=k_{A,j}^{f}(T)=A_{j}T^{b_{j}}\exp\left(-\frac{E_{j}}{R^{0}T}\right),
\]

\end_inset

 where 
\begin_inset Formula $A_{j}>0$
\end_inset

 and 
\begin_inset Formula $b_{j}$
\end_inset

 are parameters and 
\begin_inset Formula $E_{j}\geq0$
\end_inset

 is the activation energy
\begin_inset space ~
\end_inset


\begin_inset CommandInset citation
LatexCommand citep
key "Gio99,Kee96"
literal "false"

\end_inset

.
 In ChemGen an optimization is made to again avoid the power function.
 Generally,
 
\begin_inset Formula $b_{j}$
\end_inset

 is not an integer,
 however,
 since the 
\begin_inset Formula $\exp$
\end_inset

 function is unavoidable,
 we can utilize the precomputed 
\begin_inset Formula $\ln T$
\end_inset

 and insert an additional term in the exponent
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
k_{A,j}^{f}(T,\ln T)=A_{j}\exp\left(\beta_{j}\ln T-\frac{E_{j}}{R^{0}T}\right).
\]

\end_inset


\end_layout

\begin_layout Subsubsection
Three-body reactions
\end_layout

\begin_layout Standard
These reactions require a 
\begin_inset Quotes eld
\end_inset

third body
\begin_inset Quotes erd
\end_inset

 in order to proceed.
 Dissociation and recombination reactions are often of this type.
 The rate of progress is scaled by a prefactor as
\begin_inset space ~
\end_inset


\begin_inset CommandInset citation
LatexCommand citep
key "Kee96"
literal "false"

\end_inset


\begin_inset Formula 
\begin{equation}
q_{j}=\left(\sum_{i=1}^{n_{s}}\alpha_{ij}C_{i}\right)\left(k_{j}^{f}\prod_{i=1}^{n_{s}}C_{i}^{\nu_{ij}^{f}}-k_{j}^{r}\prod_{i=1}^{n_{s}}C_{i}^{\nu_{ij}^{r}}\right),\label{eq:third_body}
\end{equation}

\end_inset

where 
\begin_inset Formula $\alpha_{ij}$
\end_inset

 are the third-body efficiencies.
 In ChemGen,
 the rate of progress is kept the same for a down stream calculation,
 so 
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand eqref
reference "eq:chemical-reaction-rate-of-progress"
plural "false"
caps "false"
noprefix "false"
nolink "false"

\end_inset

,
 can still be utilized the prefactor is incorporated with the Arrenhius expression
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
k_{j}^{f}=k_{TB,j}^{f}(C_{i},M_{c},T,\ln T)=\left(\sum_{i=1}^{n_{s}}\alpha_{ij}C_{i}\right)k_{A,j}^{f}(T,\ln T)=\left(M_{c}+\sum_{i=1}^{n_{s}}\left(\alpha_{ij}-1\right)C_{i}\right)k_{A,j}^{f}(T,\ln T)
\]

\end_inset

which will still be attributed to the second term in 
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand eqref
reference "eq:third_body"
plural "false"
caps "false"
noprefix "false"
nolink "false"

\end_inset

 via the relationship of 
\begin_inset Formula $k_{j}^{f}$
\end_inset

 to 
\begin_inset Formula $k_{j}^{r}$
\end_inset

 from 
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand eqref
reference "eq:reverse_rate"
plural "false"
caps "false"
noprefix "false"
nolink "false"

\end_inset

.
 An additional optimization can be made in the code generation process for the 
\begin_inset Formula $\alpha_{ij}$
\end_inset

 terms.
 The efficiencies always default to one,
 
\begin_inset Formula $\alpha_{ij}=1$
\end_inset

,
 so for any species without a specific efficiency the 
\begin_inset Formula $\left(\alpha_{ij}-1\right)C_{i}$
\end_inset

 term can be removed,
 avoiding extra work to determine the efficiency from a sum of products of all species to a sum of products of all species with 
\begin_inset Formula $\alpha_{ij}\ne1$
\end_inset

.
 
\end_layout

\begin_layout Subsubsection
Fall-off reactions
\begin_inset CommandInset label
LatexCommand label
name "subsec:fall-off-reactions"

\end_inset


\end_layout

\begin_layout Standard
Unimolecular/recombination fall-off reactions incorporate a dependence on pressure.
 In general,
 this model predicts an increase in the reaction rate with increasing pressure.
 Given Arrhenius-type low-pressure and high-pressure limits for the rate functions (
\begin_inset Formula $k_{A,0,j}$
\end_inset

 and 
\begin_inset Formula $k_{A,\infty,j}$
\end_inset

,
 respectively with their own 
\begin_inset Formula $A_{j}$
\end_inset

,
 
\begin_inset Formula $b_{j}$
\end_inset

,
 and 
\begin_inset Formula $E_{j}$
\end_inset

 constant),
 
\begin_inset Formula $k_{j}^{f}$
\end_inset

 is computed as
\begin_inset Formula 
\begin{equation}
k_{j}^{f}=k_{FO,j}^{f}(C_{i},M_{c},T,\ln T)=k_{A,\infty,j}(T,\ln T)\left(\frac{P_{r}(C_{i},M_{c},T,\ln T)}{1+P_{r}(C_{i},M_{c},T,\ln T)}\right)F,\label{eq:falloff-reaction}
\end{equation}

\end_inset

where 
\begin_inset Formula $P_{r}$
\end_inset

 is the reduced pressure,
 defined as
\begin_inset Formula 
\[
P_{r}(C_{i},M_{c},T,\ln T)=\frac{k_{A,0,j}(T,\ln T)}{k_{A,\infty,j}(T,\ln T)}\left(M_{c}+\sum_{i=1}^{n_{s}}\left(\alpha_{ij}-1\right)C_{i}\right).
\]

\end_inset

Where the same optimization for efficiencies can be made There is a family different fall off functions which all revolve in a different way to approximate 
\begin_inset Formula $F$
\end_inset

,
 known as the broadening term,
 which we outline in the following
\end_layout

\begin_layout Subsubsection*
Troe Broadening
\end_layout

\begin_layout Standard
For the Troe fall-off reaction the broadening term,
 
\begin_inset Formula $F$
\end_inset

,
 in Equation
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand eqref
reference "eq:falloff-reaction"
plural "false"
caps "false"
noprefix "false"
nolink "false"

\end_inset

 is computed using the following 
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{eqnarray}
\log_{10}F(T,P_{r}) & = & \frac{\log_{10}F_{cent}(T)}{1+f_{1}(P_{r})^{2}}\label{eq:f_and_fcent}\\
F_{cent}(T) & = & (1-\alpha_{j})\exp(-T/T_{j,3})+\alpha\exp(-T/T_{j,1})+\exp(-T_{j,2}/T)\nonumber \\
f_{1} & = & (\log_{10}P_{r}+c)/(n-0.14(\log_{10}P_{r}+c))\nonumber \\
c & = & -0.4-0.67\;\log_{10}F_{cent}\nonumber \\
n & = & 0.75-1.27\;\log_{10}F_{cent}\nonumber 
\end{eqnarray}

\end_inset

The origin of the of are given in
\begin_inset space ~
\end_inset


\begin_inset CommandInset citation
LatexCommand citep
key "Tro77,Tro79,Gil83,Tro87"
literal "false"

\end_inset

.
\end_layout

\begin_layout Subsubsection*
Tsang Broadening
\end_layout

\begin_layout Standard
In the Tsang [cite] broadening approach 
\begin_inset Formula $F_{cent}$
\end_inset

in Equation
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "eq:f_and_fcent"
plural "false"
caps "false"
noprefix "false"
nolink "false"

\end_inset

 is simply
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
F_{cent}=A+BT
\]

\end_inset

with the remaining features,
 
\begin_inset Formula $f_{1}$
\end_inset

,
 
\begin_inset Formula $c$
\end_inset

,
 and 
\begin_inset Formula $n$
\end_inset

,
 computed in the same way the Troe formulation.
 
\end_layout

\begin_layout Subsubsection*
SRI Broadening
\end_layout

\begin_layout Standard
In the SRI [cite] broadening approach 
\begin_inset Formula $F$
\end_inset

 is replaced entirely by:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
F(T,P_{r})=d\bigl[a\exp(-b/T)+\exp(-T/c)\bigr]^{1/(1+\log_{10}^{2}P_{r})}T^{e}
\]

\end_inset


\end_layout

\begin_layout Subsubsection*
Lindemann Form
\begin_inset Formula 
\[
F(T,P_{r})=d\bigl[a\exp(-b/T)+\exp(-T/c)\bigr]^{1/(1+\log_{10}^{2}P_{r})}T^{e}
\]

\end_inset


\end_layout

\begin_layout Subsubsection
Chemically activated bimolecular reactions
\end_layout

\begin_layout Standard
Reactions of this type are also pressure-dependent,
 but the reaction rates typically decrease with increasing pressure.
 The rate constants are computed as
\begin_inset space ~
\end_inset


\begin_inset CommandInset citation
LatexCommand citep
key "Kee96"
literal "false"

\end_inset


\begin_inset Formula 
\[
k=k_{0}\left(\frac{1}{1+P_{r}}\right)F,
\]

\end_inset

where 
\begin_inset Formula $k_{0}$
\end_inset

,
 
\begin_inset Formula $P_{r}$
\end_inset

,
 and 
\begin_inset Formula $F$
\end_inset

 are calculated as in Section
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "subsec:fall-off-reactions"
plural "false"
caps "false"
noprefix "false"
nolink "false"

\end_inset

.
\end_layout

\begin_layout Section
Calculation of the Source Term
\begin_inset CommandInset label
LatexCommand label
name "subsec:sourceterm"

\end_inset


\end_layout

\begin_layout Standard
There are several ways the reactions rates can be accrued to create the actual source term applied to the species conservation equations.
 The most simple approach would be to use the chemical state at every degree of freedom to calculate the forward reactions,
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
\boldsymbol{k_{p}}=\left(k_{1}^{f}\left(y_{c,p}\right),k_{2}^{f}\left(y_{c,p}\right),k_{3}^{f}\left(y_{c,p}\right),\dots,k_{n_{r}}^{f}\left(y_{c,p}\right)\right)\label{eq:forward_rates_vector}
\end{equation}

\end_inset

Here we represent the entirity of forward reactions as 
\begin_inset Formula $\boldsymbol{k_{p}}$
\end_inset

 where the subscript 
\begin_inset Formula $p$
\end_inset

represents a particularly degree of freedom.
 At every degree of freedom there is a unique chemical state,
 
\begin_inset Formula $y_{c,p}$
\end_inset

 that yields 
\begin_inset Formula $n_{r}\times n_{dof}$
\end_inset

 forward reactions.
 Once the forward reactions are calculated the rates of progress can then be computed and assembled as
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
\boldsymbol{q_{p}}=\left(q_{1,p},q_{2,p},q_{3,p},\dots,q_{n_{r},p}\right),\label{eq:progress_rates_vector}
\end{equation}

\end_inset

where 
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
q_{j,p}=k_{j}^{f}\left(y_{c,p}\right)\prod_{i=1}^{n_{s}}C_{i}^{\nu_{ij}^{f}}-\frac{k_{j}^{f}\left(y_{c,p}\right)}{K_{j}^{e}}\prod_{i=1}^{n_{s}}C_{i}^{\nu_{ij}^{r}}.\label{eq:progress_rates_element}
\end{equation}

\end_inset

This again 
\begin_inset Formula $n_{r}\times n_{dof}$
\end_inset

 rates of progress.
 The formulation in Equation
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "eq:progress_rates_element"
plural "false"
caps "false"
noprefix "false"
nolink "false"

\end_inset

 is reduced in Chemgen by removing any zero-power terms and substituting multiplication operations for any whole number power in the terms
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
\prod_{i=1}^{n_{s}}C_{i}^{\nu_{ij}^{f}}\text{ and }\prod_{i=1}^{n_{s}}C_{i}^{\nu_{ij}^{r}}.
\]

\end_inset

For instance,
 the reaction 
\begin_inset Formula $k_{1}$
\end_inset

 describing the global reaction of hydrogen and oxygen becoming water,
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
2H_{2}+O_{2}\rightleftharpoons2H_{2}O,
\]

\end_inset

where 
\begin_inset Formula $\left(C_{0},C_{1},C_{2}\right)=\left(C_{H_{2}},C_{O_{2}},C_{H_{2}O}\right)$
\end_inset

,
 reduces to 
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
q_{1,p}=k_{1}^{f}\left(y_{c,p}\right)C_{0}^{2}C_{1}-\frac{k_{1}^{f}\left(y_{c,p}\right)}{K_{1}^{e}}C_{2}^{2}=k_{1}^{f}\left(y_{c,p}\right)C_{0}C_{o}C_{1}-\frac{k_{1}^{f}\left(y_{c,p}\right)}{K_{1}^{e}}C_{2}C_{2}\label{eq:progress_rates_reduced}
\end{equation}

\end_inset

Finally,
 the rates of progress can then be assembled into the final net production rate 
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
\boldsymbol{\omega_{p}}=\left(\omega_{1,p},\omega_{2,p},\omega_{3,p},\dots,\omega_{n_{s},p}\right),
\]

\end_inset

where
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
\omega_{i}=\sum_{j=1}^{n_{r}}\nu_{ij}q_{j}.
\]

\end_inset

This results in 
\begin_inset Formula $n_{n_{s}}\times n_{dof}$
\end_inset

 source terms.
\end_layout

\begin_layout Section
Code Generation
\end_layout

\begin_layout Standard
In the ChemGen software there are three main file types.
 The first file types are python files that manipulate chemistry data and existing static code to create compilation ready source code.
 The second file type are static code that are ingested by the python code and reformatted to the desired target software.
 The remaining file types is a mixture of python code used to exercise tests,
 most of which covered in the results section,
 Section 5,
 and yaml files that contain kinetic data.
\end_layout

\begin_layout Subsection
The concept of decorators
\end_layout

\begin_layout Standard
C++ code takes on many forms.
 For instance...
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

for a in a_list:
\end_layout

\begin_layout Plain Layout

	a*a
\end_layout

\end_inset


\end_layout

\begin_layout Section
Results
\end_layout

\begin_layout Subsection
Thermodynamics
\end_layout

\begin_layout Subsection
Reaction Rates
\end_layout

\begin_layout Subsection
Parallelism
\end_layout

\begin_layout Standard
Several optimizations can be made in the code generation of the source term calculations.
 The overall target of Chemgen is to be used in CFD,
 wether to calculate source terms on the fly or to calculate in post processing independent of the CFD solver.
 In either approach it is important to consider how these source terms can be built efficiently into software.
 Here we outline and label several distinct parallelization approaches that can be utilized.
 The choice of parallelization comes down to feasibility of implementation (particularly for existing software),
 size of source term (i.e.
 10 reactions vs 1000 reactions),
 and existing hardware.
 In The Results section we utilize the malleability given by code generation to implement each of these parallelizations for chemical reaction mechanisms of various sizes and comment on the choice of each algorithm.
\end_layout

\begin_layout Standard
Using the above description the following steps can be used in serial to calculate all source terms
\end_layout

\begin_layout Enumerate
For all states at every degree of freedom,
 
\begin_inset Formula $y_{f,p}$
\end_inset


\end_layout

\begin_deeper
\begin_layout Enumerate
Calculate chemical state 
\begin_inset Formula $y_{f,p}\rightarrow y_{c,p}$
\end_inset


\end_layout

\begin_layout Enumerate
Calculate all forward reactions,
 
\begin_inset Formula $\boldsymbol{k_{p}}=\left(k_{1}^{f}\left(y_{c,p}\right),k_{2}^{f}\left(y_{c,p}\right),k_{3}^{f}\left(y_{c,p}\right),\dots,k_{n_{r}}^{f}\left(y_{c,p}\right)\right)$
\end_inset


\end_layout

\begin_layout Enumerate
Using 
\begin_inset Formula $\boldsymbol{k_{p}}$
\end_inset

 calculate all rates of progress 
\begin_inset Formula $\boldsymbol{q_{p}}=\left(q_{1,p},q_{2,p},q_{3,p},\dots,q_{n_{r},p}\right)$
\end_inset


\end_layout

\begin_layout Enumerate
Calculate all production rates 
\begin_inset Formula $\boldsymbol{\omega_{p}}=\left(\omega_{1,p},\omega_{2,p},\omega_{3,p},\dots,\omega_{n_{s},p}\right)$
\end_inset

 
\end_layout

\end_deeper
\begin_layout Standard
The algorithm above when done in serial is 
\begin_inset Formula $2\left(n_{dof}\times n_{r}\right)+\left(n_{dof}\times n_{s}\right)$
\end_inset

 number of operations and we refer to it as 
\series bold
S
\series default
 in the following sections.
 It is the most simple and easy implementation to utilize.
 As such,
 it can be regularly be debugged and examined.
 However,
 if 
\begin_inset Formula $n_{r}$
\end_inset

 or 
\begin_inset Formula $n_{s}$
\end_inset

 become large,
 the source term may become to cumbersome to execute in serial over all degrees of freedom.
\end_layout

\begin_layout Standard
Using the first level of parallelization,
 
\series bold
S
\series default
 could be decompose the domain of degrees of freedom and equally distribute the work using the following algorithm
\end_layout

\begin_layout Standard
S-d
\end_layout

\begin_layout Enumerate
For all states at every degree of freedom,
 
\begin_inset Formula $y_{f,p}$
\end_inset

 decompose into 
\begin_inset Formula $d$
\end_inset

 decomposition,
 
\begin_inset Formula $y_{f,p}|_{d}$
\end_inset

 of 
\begin_inset Formula $n_{d}$
\end_inset

 domains
\end_layout

\begin_deeper
\begin_layout Enumerate
For each domain element,
 
\begin_inset Formula $d$
\end_inset

,
 perform the source term calculations in parallel:
\end_layout

\begin_deeper
\begin_layout Enumerate
Calculate Chemical state 
\begin_inset Formula $y_{f,p}|_{d}\rightarrow y_{c,p}$
\end_inset


\end_layout

\begin_layout Enumerate
Calculate all forward reactions,
 
\begin_inset Formula $\boldsymbol{k_{p}}=\left(k_{1}^{f}\left(y_{c,p}\right),k_{2}^{f}\left(y_{c,p}\right),k_{3}^{f}\left(y_{c,p}\right),\dots,k_{n_{r}}^{f}\left(y_{c,p}\right)\right)$
\end_inset


\end_layout

\begin_layout Enumerate
Using 
\begin_inset Formula $\boldsymbol{k_{p}}$
\end_inset

 calculate all rates of progress 
\begin_inset Formula $\boldsymbol{q_{p}}=\left(q_{1,p},q_{2,p},q_{3,p},\dots,q_{n_{r},p}\right)$
\end_inset


\end_layout

\begin_layout Enumerate
Calculate all production rates 
\begin_inset Formula $\boldsymbol{\omega_{p}}=\left(\omega_{1,p},\omega_{2,p},\omega_{3,p},\dots,\omega_{n_{s},p}\right)$
\end_inset

 
\end_layout

\end_deeper
\begin_layout Enumerate
Gather 
\begin_inset Formula $\boldsymbol{\omega_{p}}$
\end_inset

 to assimilate full set for all degrees of freedom (if necessary).
\end_layout

\end_deeper
\begin_layout Standard
This yields the same number of operations but each domain performs 
\begin_inset Formula $\left(\frac{1}{n_{d}}\right)\left(2\left(n_{dof}\times n_{r}\right)+\left(n_{dof}\times n_{s}\right)\right)$
\end_inset

 and we refer to this approach as 
\series bold
S-d
\series default
.
\end_layout

\begin_layout Standard
If available,
 another tier of parallelization can utilized in multiple ways,
 for instance the calculations can be further decomposed into individual launches for threaded operations.
 For these examples we specifically utilize thread building blocks,
 we also specifically modified them for GPU based algorithms that we mention later in this section.
 The first approach using threading is as follows:
\end_layout

\begin_layout Enumerate
For all states at every degree of freedom,
 
\begin_inset Formula $y_{f,p}$
\end_inset

 decompose into 
\begin_inset Formula $d$
\end_inset

 decomposition,
 
\begin_inset Formula $y_{f,p}|_{d}$
\end_inset


\end_layout

\begin_deeper
\begin_layout Enumerate
For each domain element,
 
\begin_inset Formula $d$
\end_inset

,
 perform the source term calculations in parallel:
\end_layout

\begin_deeper
\begin_layout Enumerate
Calculate Chemical state 
\begin_inset Formula $y_{f,p}|_{d}\rightarrow y_{c,p}$
\end_inset


\end_layout

\begin_layout Enumerate
Thread over the 
\begin_inset Formula $\frac{1}{n_{d}}n_{dof}n_{r}$
\end_inset

 calculations to calculate forward reactions,
 
\begin_inset Formula $\boldsymbol{k_{p}}=\left(k_{1}^{f}\left(y_{c,p}\right),k_{2}^{f}\left(y_{c,p}\right),k_{3}^{f}\left(y_{c,p}\right),\dots,k_{n_{r}}^{f}\left(y_{c,p}\right)\right)$
\end_inset


\end_layout

\begin_layout Enumerate
Thread over the 
\begin_inset Formula $\frac{1}{n_{d}}n_{dof}n_{r}$
\end_inset

 calculations to calculate all rates of progress 
\begin_inset Formula $\boldsymbol{q_{p}}=\left(q_{1,p},q_{2,p},q_{3,p},\dots,q_{n_{r},p}\right)$
\end_inset

 in domain 
\begin_inset Formula $d$
\end_inset


\end_layout

\begin_layout Enumerate
Thread over the 
\begin_inset Formula $\frac{1}{n_{d}}n_{dof}n_{s}$
\end_inset

 calculations to calculate all production rates 
\begin_inset Formula $\boldsymbol{\omega_{p}}=\left(\omega_{1,p},\omega_{2,p},\omega_{3,p},\dots,\omega_{n_{s},p}\right)$
\end_inset

 
\end_layout

\end_deeper
\begin_layout Enumerate
Gather 
\begin_inset Formula $\boldsymbol{\omega_{p}}$
\end_inset

 to assimilate full set for all degrees of freedom (if necessary).
\end_layout

\end_deeper
\begin_layout Standard
We refer to this parallelization as 
\series bold
T1.
 
\series default
Although 
\series bold
T1
\series default
 is appealing and provides a straightforward transition from 
\series bold
S-d,
 
\series default
the number of thread launches can become expensive,
 thus we introduce another threading approach that threads over each degree of freedom within the subdomain
\end_layout

\begin_layout Enumerate
For all states at every degree of freedom,
 
\begin_inset Formula $y_{f,p}$
\end_inset

 decompose into 
\begin_inset Formula $d$
\end_inset

 decomposition,
 
\begin_inset Formula $y_{f,p}|_{d}$
\end_inset


\end_layout

\begin_deeper
\begin_layout Enumerate
For each domain element,
 
\begin_inset Formula $d$
\end_inset

,
 perform the source term calculations in parallel:
\end_layout

\begin_deeper
\begin_layout Enumerate
Calculate Chemical state 
\begin_inset Formula $y_{f,p}|_{d}\rightarrow y_{c,p}$
\end_inset


\end_layout

\begin_layout Enumerate
Thread over each chemical state in the subdomain
\end_layout

\begin_deeper
\begin_layout Enumerate
Calculate the reactions,
 
\begin_inset Formula $\boldsymbol{k_{p}}=\left(k_{1}^{f}\left(y_{c,p}\right),k_{2}^{f}\left(y_{c,p}\right),k_{3}^{f}\left(y_{c,p}\right),\dots,k_{n_{r}}^{f}\left(y_{c,p}\right)\right)$
\end_inset


\end_layout

\begin_layout Enumerate
Calculate the rates of progress 
\begin_inset Formula $\boldsymbol{q_{p}}=\left(q_{1,p},q_{2,p},q_{3,p},\dots,q_{n_{r},p}\right)$
\end_inset

 in domain 
\begin_inset Formula $d$
\end_inset


\end_layout

\begin_layout Enumerate
Calculate all production rates 
\begin_inset Formula $\boldsymbol{\omega_{p}}=\left(\omega_{1,p},\omega_{2,p},\omega_{3,p},\dots,\omega_{n_{s},p}\right)$
\end_inset

 
\end_layout

\end_deeper
\end_deeper
\begin_layout Enumerate
Gather 
\begin_inset Formula $\boldsymbol{\omega_{p}}$
\end_inset

 to assimilate full set for all degrees of freedom (if necessary).
\end_layout

\end_deeper
\begin_layout Standard
This performs the source term at every threaded degree of freedom in serial.
 We refer to the parallelization as 
\series bold
T2
\series default
.
\end_layout

\begin_layout Standard
With some rearranging the source term can be assembled over one 
\begin_inset Formula $n_{r}$
\end_inset

 threaded loop for each degree of freedom in serial,
\end_layout

\begin_layout Enumerate
For all states at every degree of freedom,
 
\begin_inset Formula $y_{f,p}$
\end_inset

 decompose into 
\begin_inset Formula $d$
\end_inset

 decomposition,
 
\begin_inset Formula $y_{f,p}|_{d}$
\end_inset


\end_layout

\begin_deeper
\begin_layout Enumerate
For each domain element,
 
\begin_inset Formula $d$
\end_inset

,
 perform the source term calculations in parallel:
\end_layout

\begin_deeper
\begin_layout Enumerate
Calculate Chemical state 
\begin_inset Formula $y_{f,p}|_{d}\rightarrow y_{c,p}$
\end_inset


\end_layout

\begin_layout Enumerate
Assemble the source term for each chemical state in the subdomain
\end_layout

\begin_deeper
\begin_layout Enumerate
Create 
\begin_inset Formula $\boldsymbol{\omega_{p}}$
\end_inset

 for storage (if it doesn't already exist)
\end_layout

\begin_layout Enumerate
Thread over 
\begin_inset Formula $n_{r}$
\end_inset

 reactions,
 indexed 
\begin_inset Formula $j$
\end_inset

 
\end_layout

\begin_layout Enumerate
individually calculate 
\begin_inset Formula $k_{j}$
\end_inset

 
\end_layout

\begin_layout Enumerate
using 
\begin_inset Formula $k_{j}$
\end_inset

 calculate the rates of progress 
\begin_inset Formula $q_{j}$
\end_inset


\end_layout

\begin_layout Enumerate
for 
\begin_inset Formula $\nu_{ij}\ne$
\end_inset

0 add 
\begin_inset Formula $\nu_{ij}q_{j}$
\end_inset

 to the existing source term,
 
\begin_inset Formula $\boldsymbol{\omega_{p}}$
\end_inset

,
 element 
\begin_inset Formula $i$
\end_inset


\end_layout

\end_deeper
\end_deeper
\begin_layout Enumerate
Gather 
\begin_inset Formula $\boldsymbol{\omega_{p}}$
\end_inset

 to assimilate full set for all degrees of freedom (if necessary).
\end_layout

\end_deeper
\begin_layout Standard
This creates on launch per degree of freedom but increases the compute on each thread.
 We refer to this parallelization as 
\series bold
T3.
\end_layout

\begin_layout Standard
For all approaches 
\series bold
S
\series default
,
 
\series bold
S-d
\series default
,
 
\series bold
T1
\series default
,
 
\series bold
T2,
 T3
\series default
,

\series bold
 
\series default
there is bound to be a trade off.
 Some of these methods use several launches to utilize threading which can be expensive,
 however,
 if there are many fast threads available the launch time may become negligible.
 In addition,
 some of these approaches utilize various compute efficiencies that may be better for different hardware.
 In CFD chemical source terms are unique in that they are embarrassed of their neighboring degrees of freedom.
 Quantities such as fluxes and gradients require face contributions that involve other degrees of freedom.
 It is therefore feasible that the approaches laid out here could be implemented in a variety of CFD software,
 with the caveat that the performance may not transition due to other factors beholden to the target software.
 
\end_layout

\begin_layout Standard
In this section we utilize these architectures in on several systems with two main approaches,
 the first is to use CPU based parallelism with the threading is done using the logical cores on a given node and the second is using GPU based parallelism.
 These approaches are mainly to showcase that the generated code can be arranged to fit the needs of the user;
 however,
 we do report signficant speed-up and general findings,
 which was found to be consistent with the theoretical configurations of the architectures we tested on.
 Full optimization of the execution of these algorithms can be pursued in future iterations of Chemgen.
\end_layout

\begin_layout Subsubsection
CPU Based Parallelism 
\end_layout

\begin_layout Subsubsection*
Serial Performance,
 S
\end_layout

\begin_layout Subsubsection*
MPI Decomposed Performance,
 S-d
\end_layout

\begin_layout Subsubsection*
Threading Performance,
 T1
\end_layout

\begin_layout Subsubsection*
MPI and Threading Performance,
 T2
\end_layout

\begin_layout Subsubsection*
MPI and Threading Performance,
 T3
\end_layout

\begin_layout Standard
\begin_inset CommandInset bibtex
LatexCommand bibtex
btprint "btPrintCited"
bibfiles "citations"
options "elsarticle-num"
encoding "default"

\end_inset


\end_layout

\end_body
\end_document
